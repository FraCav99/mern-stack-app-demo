{"version":3,"sources":["components/Post.js","components/PostForm.js","components/EditForm.js","App.js","index.js"],"names":["Post","title","content","id","url","setIsUpdate","setIsEdit","setCurrentPost","deletePost","a","axios","delete","console","log","message","className","onClick","_id","openEdit","Form","useState","setTitle","setContent","addNewPost","ev","preventDefault","trim","newPost","post","onSubmit","type","name","placeholder","value","onChange","target","currentPost","handleChange","editPost","patch","App","posts","setPosts","isEdit","isUpdate","useEffect","fetchPosts","get","response","data","EditForm","PostForm","length","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d17de411.chunk.js","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nconst Post = ({\n  title,\n  content,\n  id,\n  url,\n  setIsUpdate,\n  setIsEdit,\n  setCurrentPost,\n}) => {\n  const deletePost = async id => {\n    try {\n      await axios.delete(`${url}/${id}`);\n      setIsUpdate(true);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  const openEdit = id => {\n    setIsEdit(true);\n    setCurrentPost({\n      _id: id,\n      title,\n      content,\n    });\n  };\n\n  return (\n    <div className=\"post\" id={id}>\n      <h2>{title}</h2>\n      <p>{content}</p>\n      <button id=\"delete-btn\" onClick={() => deletePost(id)}>\n        Delete\n      </button>\n      <button id=\"edit-btn\" onClick={() => openEdit(id)}>\n        Edit\n      </button>\n    </div>\n  );\n};\n\nexport default Post;\n","import React, { useState } from 'react';\nimport axios from 'axios';\nimport '../Form.css';\n\nconst Form = ({ url, setIsUpdate }) => {\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n\n  const titleHandler = ev => {\n    setTitle(ev.target.value);\n  };\n\n  const contentHandler = ev => {\n    setContent(ev.target.value);\n  };\n\n  const addNewPost = async ev => {\n    ev.preventDefault();\n\n    if (!title.trim() || !content.trim()) {\n      return;\n    }\n\n    try {\n      const newPost = {\n        title: title.trim(),\n        content: content.trim(),\n      };\n\n      await axios.post(url, newPost);\n      setTitle('');\n      setContent('');\n      setIsUpdate(true);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  return (\n    <div className=\"form post-form\">\n      <form onSubmit={addNewPost}>\n        <input\n          type=\"text\"\n          id=\"title\"\n          name=\"title\"\n          placeholder=\"Post title\"\n          value={title}\n          onChange={titleHandler}\n        />\n        <textarea\n          id=\"content\"\n          name=\"content\"\n          placeholder=\"Your content here...\"\n          value={content}\n          onChange={contentHandler}\n        />\n        <button type=\"submit\">Add Post!</button>\n      </form>\n    </div>\n  );\n};\n\nexport default Form;\n","import React from 'react';\nimport axios from 'axios';\nimport '../Form.css';\n\nconst Form = ({ setIsEdit, setIsUpdate, currentPost, setCurrentPost, url }) => {\n  const { _id, title, content } = currentPost;\n\n  const handleChange = ev => {\n    setCurrentPost({ ...currentPost, [ev.target.id]: ev.target.value });\n  };\n\n  const editPost = async ev => {\n    ev.preventDefault();\n\n    // If edited post title or content are empty\n    // stop function execution\n    if (title === '' || content === '') return;\n    try {\n      await axios.patch(`${url}/${_id}`, {\n        title,\n        content,\n      });\n\n      setIsUpdate(true);\n      setIsEdit(false);\n      setCurrentPost();\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  const closeEdit = () => {\n    setIsEdit(false);\n    setCurrentPost();\n  };\n\n  return (\n    <div className=\"form edit-form\" onSubmit={editPost}>\n      <form>\n        <input\n          type=\"text\"\n          id=\"title\"\n          name=\"title\"\n          value={title}\n          placeholder=\"Post title\"\n          onChange={handleChange}\n        />\n        <textarea\n          id=\"content\"\n          name=\"content\"\n          placeholder=\"Your content here...\"\n          value={content}\n          onChange={handleChange}\n        />\n        <button type=\"submit\" onClick={editPost}>\n          Edit Post!\n        </button>\n        <button id=\"close-edit\" onClick={closeEdit}>\n          Dismiss\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default Form;\n","import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Post from './components/Post';\nimport PostForm from './components/PostForm';\nimport EditForm from './components/EditForm';\nimport './App.css';\n\nfunction App() {\n  const [posts, setPosts] = useState([]);\n  const [isEdit, setIsEdit] = useState(false);\n  const [isUpdate, setIsUpdate] = useState(true);\n  const [currentPost, setCurrentPost] = useState();\n  const url = 'https://mern-app-stack-post.herokuapp.com';\n\n  useEffect(() => {\n    if (!isUpdate) return;\n    fetchPosts();\n    setIsUpdate(false);\n  }, [isUpdate]);\n\n  const fetchPosts = async () => {\n    try {\n      const response = await axios.get(url);\n      setPosts(response.data);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Post Page</h1>\n      {isEdit ? (\n        <EditForm\n          setIsEdit={setIsEdit}\n          setIsUpdate={setIsUpdate}\n          currentPost={currentPost}\n          setCurrentPost={setCurrentPost}\n          url={url}\n        />\n      ) : (\n        <PostForm url={url} setIsUpdate={setIsUpdate} />\n      )}\n      <div className={isEdit ? 'hidden' : 'posts-container'}>\n        {posts.length > 0 ? (\n          posts.map(post => (\n            <Post\n              title={post.title}\n              content={post.content}\n              id={post._id}\n              setIsUpdate={setIsUpdate}\n              setCurrentPost={setCurrentPost}\n              setIsEdit={setIsEdit}\n              key={post._id}\n              url={url}\n            />\n          ))\n        ) : (\n          <p>No post available!</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}