{"version":3,"sources":["components/Post.js","components/PostForm.js","components/EditForm.js","App.js","index.js"],"names":["Post","title","content","id","className","Form","addNewPost","onSubmit","ev","type","name","placeholder","closeEdit","currentPost","setCurrentPost","url","_id","handleChange","target","value","editPost","a","preventDefault","axios","patch","console","log","message","onChange","onClick","App","useState","posts","setPosts","isEdit","setIsEdit","useEffect","fetchPosts","get","response","data","addPost","document","getElementById","trim","newPost","post","deletePost","delete","closest","toggleEdit","querySelector","classList","toggle","EditForm","PostForm","targetElement","titleEl","textContent","contentEl","setEditElement","length","map","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.da22523f.chunk.js","sourcesContent":["import React from 'react';\n\nconst Post = ({ title, content, id }) => {\n  return (\n    <div className=\"post\" id={id}>\n      <h2>{title}</h2>\n      <p>{content}</p>\n      <button id=\"delete-btn\">Delete</button>\n      <button id=\"edit-btn\">Edit</button>\n    </div>\n  );\n};\n\nexport default Post;\n","import React from 'react';\nimport '../Form.css';\n\nconst Form = ({ addNewPost }) => {\n  return (\n    <div className=\"form post-form\">\n      <form onSubmit={ev => addNewPost(ev)}>\n        <input type=\"text\" id=\"title\" name=\"title\" placeholder=\"Post title\" />\n        <textarea\n          id=\"content\"\n          name=\"content\"\n          placeholder=\"Your content here...\"\n        />\n        <button type=\"submit\">Add Post!</button>\n      </form>\n    </div>\n  );\n};\n\nexport default Form;\n","import React from 'react';\nimport axios from 'axios';\nimport '../Form.css';\n\nconst Form = ({ closeEdit, currentPost, setCurrentPost, url }) => {\n  const { _id, title, content } = currentPost;\n\n  const handleChange = ev => {\n    setCurrentPost({ ...currentPost, [ev.target.id]: ev.target.value });\n  };\n\n  const editPost = async ev => {\n    ev.preventDefault();\n\n    // If edited post title or content are empty\n    // stop function execution\n    if (title === '' || content === '') return;\n    try {\n      await axios.patch(`${url}/${_id}`, {\n        title,\n        content,\n      });\n\n      closeEdit();\n      setCurrentPost();\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  return (\n    <div className=\"form edit-form\" onSubmit={editPost}>\n      <form>\n        <input\n          type=\"text\"\n          id=\"title\"\n          name=\"title\"\n          value={title}\n          placeholder=\"Post title\"\n          onChange={handleChange}\n        />\n        <textarea\n          id=\"content\"\n          name=\"content\"\n          placeholder=\"Your content here...\"\n          value={content}\n          onChange={handleChange}\n        />\n        <button type=\"submit\">Edit Post!</button>\n        <button id=\"close-edit\" onClick={closeEdit}>\n          Dismiss\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default Form;\n","import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Post from './components/Post';\nimport PostForm from './components/PostForm';\nimport EditForm from './components/EditForm';\nimport './App.css';\n\nfunction App() {\n  const [posts, setPosts] = useState([]);\n  const [isEdit, setIsEdit] = useState(false);\n  const [currentPost, setCurrentPost] = useState();\n  const url = 'https://mern-app-stack-post.herokuapp.com';\n\n  useEffect(() => {\n    fetchPosts();\n  }, [posts]);\n\n  const fetchPosts = async () => {\n    try {\n      const response = await axios.get(url);\n      setPosts(response.data);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  const addPost = async ev => {\n    ev.preventDefault();\n    const title = document.getElementById('title');\n    const content = document.getElementById('content');\n\n    if (!title.value.trim() || !content.value.trim()) {\n      return;\n    }\n\n    try {\n      const newPost = {\n        title: title.value.trim(),\n        content: content.value.trim(),\n      };\n\n      await axios.post(url, newPost);\n      title.value = '';\n      content.value = '';\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  const deletePost = async ev => {\n    try {\n      await axios.delete(`${url}/${ev.target.closest('.post').id}`);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  const toggleEdit = async () => {\n    const postsContainer = document.querySelector('.posts-container');\n    postsContainer.classList.toggle('hidden');\n    setIsEdit(!isEdit);\n  };\n\n  const setEditElement = ev => {\n    const targetElement = ev.target.closest('.post');\n    const titleEl = targetElement.querySelector('h2').textContent;\n    const contentEl = targetElement.querySelector('p').textContent;\n\n    setCurrentPost({\n      _id: targetElement.id,\n      title: titleEl,\n      content: contentEl,\n    });\n  };\n\n  const handlePost = ev => {\n    if (ev.target.id === 'delete-btn') {\n      deletePost(ev);\n    }\n\n    if (ev.target.id === 'edit-btn') {\n      toggleEdit();\n      setEditElement(ev);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Post Page</h1>\n      {isEdit ? (\n        <EditForm\n          closeEdit={toggleEdit}\n          currentPost={currentPost}\n          setCurrentPost={setCurrentPost}\n          url={url}\n        />\n      ) : (\n        <PostForm addNewPost={addPost} />\n      )}\n      <div className=\"posts-container\" onClick={handlePost}>\n        {posts.length > 0 ? (\n          posts.map(post => (\n            <Post\n              title={post.title}\n              content={post.content}\n              id={post._id}\n              key={post._id}\n            />\n          ))\n        ) : (\n          <p>No post available!</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}